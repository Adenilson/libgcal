libgcal INSTALL
cavalcantii@gmail.com

== Compile and install ==

Dependencies: gcc, cmake or automake, libxml-dev, libcurl-dev, ca-certificates


In the project root directory, run:

=== CMake ===

$mkdir build

$cd build

$cmake ..

$make



=== Automake ===

$autoreconf -i -f

$mkdir build #its a good practice not polute source directory
       	     #with binary objects

$cd build

$../configure

$make

$sudo make install



== Development ==

Dependencies: lcov, gcov, check, doxygen, dot

In cmake buildsystem, developer compiler flags are turned on by default (you can configure by running "ccmake ." in the build directory).

Or if you using the autotools based build system:

$../configure --enable-devel #enable unit tests and other flags


**Attention**: There is an issue with efence in Ubuntu Hardy (mprotect fails),
you should run instead

**$../configure --enable-warnings --enable-check --enable-lcov**


=== Tests and docs ===

Cmake (make test) or autotools (make lcov) it will run unit test and create coverage reports.

For documentation: make doxygen (generates API documentation)


ps1: If you wish just to run just a suite case, set GCAL environment
variable (core|user|xml|screw) and GCALTEST variable for core module
testing (gcal|xpath|edit|contact|debug|query).


ps2: you can format this document to HTML running

$txt2tags -t html INSTALL


ps3: ATTENTION utest will not run on source directory.

ps4: Currently I have being using cmake as the official development buildsystem
(just run: make build; cd build; cmake ..; make)

ps5: Libgcal is already included in major Linux distros (Debian, OpenSuse,
Ubuntu, Fedora, etc) and FreeBSD

